spring.security.oauth2.client.registration.spotify.client-id=${SPOTIFY_API_CLIENT_ID}
spring.security.oauth2.client.registration.spotify.client-secret=${SPOTIFY_API_CLIENT_SECRET}
spring.security.oauth2.client.registration.spotify.scope=playlist-read-private,playlist-read-collaborative,ugc-image-upload,user-follow-read,playlist-modify-private,user-read-email,user-read-private,streaming,app-remote-control,user-modify-playback-state,user-follow-modify,user-library-read,user-library-modify,playlist-modify-public,user-read-playback-state,user-read-currently-playing,user-read-recently-played,user-read-playback-position,user-top-read
spring.security.oauth2.client.registration.spotify.provider=spotify-provider
spring.security.oauth2.client.registration.spotify.client-authentication-method=basic
spring.security.oauth2.client.registration.spotify.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.spotify.redirect-uri=http://localhost:8080/login/oauth2/code/spotify

spring.security.oauth2.client.provider.spotify-provider.authorization-uri=https://accounts.spotify.com/authorize?show_dialog=true
spring.security.oauth2.client.provider.spotify-provider.token-uri=https://accounts.spotify.com/api/token
spring.security.oauth2.client.provider.spotify-provider.user-info-uri=https://api.spotify.com/v1/me
spring.security.oauth2.client.provider.spotify-provider.user-name-attribute=id

spring.datasource.url=jdbc:h2:file:./data/spotifydb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=partyuser
spring.datasource.password=partypass
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.h2.console.settings.trace=false
spring.h2.console.settings.web-allow-others=false

spring.sql.init.mode=always